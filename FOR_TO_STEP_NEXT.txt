<!--
  http://www.cyross.com/pc8801wiki/index.php/Template:Version を参照して記述
-->

{{Version
|n =未確認
|n0=未確認
|ns=未確認
|v1=ROM-BASIC<br/>DISK-BASIC
|v2=ROM-BASIC<br/>DISK-BASIC<br/>日本語BASIC
|v3=Version 3.0<br/>Version 3.1
|n9=未確認
|86=未確認
|ms=未確認
}}

<!-- 
  http://www.cyross.com/pc8801wiki/index.php/Template:CommandCategory を参照し、
  BASICリファレンス目次 http://www.cyross.com/pc8801wiki/index.php/BASIC%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9 
  の分類にしたがって記述
-->

{{CommandCategory
|cat1=★★要記入★★
|cat2=★★要記入★★
}}

== 機能 ==
★ですます調に変更してください。
指定した値の範囲を繰り返す

== 書式 ==
<!-- 
  ヘルプ ( http://www.cyross.com/pc8801wiki/index.php/%E3%83%98%E3%83%AB%E3%83%97 ) を参照。
  ・[A]    Aを省略可
  ・<A|B>  AまたはBを指定
  ・{A}    Aを繰り返し指定可能。省略も可。
-->

★ 書式に省略可能な繰り返し [,引数...] が含まれている場合は、{,引数} に変更してください。
; 書式1
: FOR 変数名=開始値 TO 終了値 [ STEP 増分 ]
; 書式2
: NEXT [ 変数名 [ , 変数名... ] ]

== 解説 ==

★なるべく、ですます調に変更してください。分量が多い場合はそのままで構いません。


変数名で指定した変数の値を増やしながら終了値に到達するまで、NEXTまでの間を繰り返し実行する。変数名は整数または単精度実数。初期値、終了値、増分は数値を指定する。 NEXTには、対応するFORの変数名を指定するが、省略も可能。

FORは、まず変数名=開始値を実行する。その後、以下の処理を繰り返す。
*変数の値 >終了値なら繰り返しを終了してNEXTの次の文へジャンプ。
*NEXTまでを実行。
*変数に増分を加算。

増分が負数の場合は、変数の値 <終了値で繰り返しを終了する。 最初から繰り返し終了の条件に該当する場合は、NEXTまでの間は一度も実行されない。

FOR～NEXTは入れ子になってもよい。FORと、それより後で最も近いNEXTが対と見なされる。 複数のNEXTが連続する場合は、それを1つのNEXTにまとめられる。この場合、対になるFORの変数名を、入れ子の内側から順に指定する。
<pre>
10 FOR I=1 TO 9
20   FOR J=1 TO 9
30     PRINT I;" X ";J;"=";I*J
40   NEXT
50 NEXT

' 40行目と50行目はまとめて、次のようにしてもよい。
40 NEXT J,I
</pre>


<!-- 「解説」内に例が含まれている場合には、余力があれば、以下の形式に書き改めてください。

== 例 ==

<code>AUTO</code>
* 10行目から10行刻みで行番号を発生させます。
<code>AUTO 500, 5</code>
* 500行目から5行刻みで行番号を発生させます。

== プログラム例 ==

全体をpreで囲む。不等号やアンパサンドはそのまま記述可。

<pre>
10 I = 10;
20 WHILE I>0 AND I<11 
30 PRINT "HELLO! PC-8001&PC-8801&PC-9801"
40 I = I - 1
50 WEND
</pre>

-->

== 参照 ==
★★以下の参照先は、BASICリファレンス目次 http://www.cyross.com/pc8801wiki/index.php/BASIC%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9 を参照して適切な名前に修正してください。
* [[WHILE]]
